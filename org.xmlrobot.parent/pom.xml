<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<!-- ADAPTATION OF SUPER-POM http://maven.apache.org/pom.html -->
	
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.xmlrobot</groupId>
	<artifactId>parent</artifactId>
	<version>1.0.0</version>
	<name>parent</name>
	<description>xmlrobot parent project</description>
	<packaging>pom</packaging>

	<!-- PROPERTIES -->
	<properties>
		<slf4j.version>1.7.7</slf4j.version>
		<!-- <solr.version>4.10.2</solr.version> -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<!-- PROFILES -->
	<profiles>

		<!-- PROFILE: Q -->
		<profile>
			<id>q</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<build.profile.id>q</build.profile.id>
			</properties>
		</profile>

		<!-- PROFILE: RELEASE -->
		<!-- <profile>
			<id>release-profile</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<inherited>true</inherited>
						<artifactId>maven-source-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<inherited>true</inherited>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<inherited>true</inherited>
						<artifactId>maven-deploy-plugin</artifactId>
						<configuration>
							<updateReleaseInfo>true</updateReleaseInfo>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile> -->
	</profiles>

	<!-- REPOSITORIES -->
	<repositories>
		<repository>
			<id>central</id>
			<name>Central Repository</name>
			<url>http://repo.maven.apache.org/maven2</url>
			<layout>default</layout>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<!-- PLUGIN PROPERTIES -->
	<pluginRepositories>
		<pluginRepository>
			<id>central</id>
			<name>Central Repository</name>
			<url>http://repo.maven.apache.org/maven2</url>
			<layout>default</layout>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
		</pluginRepository>
	</pluginRepositories>

	<!-- DEPENDENCIES -->
	<dependencies>
		<!-- SLF4J -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<!-- SOLR 4.10.2 -->
		<!-- <dependency>
			<groupId>org.apache.solr</groupId>
			<artifactId>solr-core</artifactId>
			<version>${solr.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.solr</groupId>
			<artifactId>solr-solrj</artifactId>
			<version>${solr.version}</version>
		</dependency> -->
	</dependencies>

	<!-- BUILD -->
	<build>
		<!-- Children must override it by themselves -->
		<finalName>parent</finalName>
		
		<!-- Inherited SuperPOM values -->
		<directory>${project.basedir}/target</directory>
		<outputDirectory>${project.build.directory}/classes</outputDirectory>
		<testOutputDirectory>${project.build.directory}/test-classes</testOutputDirectory>
		<sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
		<scriptSourceDirectory>src/main/scripts</scriptSourceDirectory>
		<testSourceDirectory>${project.basedir}/src/test/java</testSourceDirectory>
		
		<!-- BUILD: RESOURCES -->
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
			</resource>
		</resources>

		<!-- BUILD: TEST RESOURCES -->
		<testResources>
			<testResource>
				<directory>${project.basedir}/src/test/resources</directory>
			</testResource>
		</testResources>

		<!-- BUILD: PLUGIN MANAGEMENT -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>properties-maven-plugin</artifactId>
					<version>1.0-alpha-2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.7</version>
				</plugin>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>2.5.3</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.2</version>
				</plugin>
				<!-- Default inherited maven-plugins -->
				<plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.3</version>
				</plugin>
				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.2-beta-5</version>
				</plugin>
				<plugin>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.0</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<!-- BUILD: FILTERS -->
		<filters>
			<filter>
				${project.basedir}/profiles/${build.profile.id}/config.properties
			</filter>
		</filters>

		<!-- BUILD: PLUGIN IMPLEMENTATION -->
		<plugins>

			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				
				<!-- If false children will must override & enable it -->
				<extensions>true</extensions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<!-- Learning with last version always. -->
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<!-- Break inheritance with children projects. 
				    If else, tries to load parent properties. 
				    So, they will be forced to override it. -->
				<inherited>false</inherited>
				<executions>
					<!-- Load properties for the default lifecycle -->
					<execution>
						<id>default-lifecycle-properties</id>
						<phase>initialize</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<!-- Properties are read from profile specific property file -->
								<file>${project.basedir}/profiles/${build.profile.id}/config.properties</file>
							</files>
						</configuration>
					</execution>

					<!-- Load properties for the clean lifecycle -->
					<execution>
						<id>clean-lifecycle-properties</id>
						<phase>pre-clean</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<!-- Properties are read from profile specific property file -->
								<file>${project.basedir}/profiles/${build.profile.id}/config.properties</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				Break inheritance with children processes. 
				    If else tries to load parent properties. 
				    So they will be forced to override it.
				<inherited>false</inherited>
				Copy the solr.xml to the correct directory and apply properties 
					filtering to it.
				<executions>
					Default core
					<execution>
						<id>copy-memory-xml</id>
						<phase>compile</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							Configure the directory in which the file is copied.
							<outputDirectory>${org.xmlrobot.memory}</outputDirectory>
							<resources>
								Configure the copied file and apply properties filtering to 
									it.
								<resource>
									<directory>${project.basedir}/src/main/resources</directory>
									<filtering>true</filtering>
									<includes>
										<include>solr.xml</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					Copy everything found from the src/main/config directory to the 
						correct directory.
					<execution>
						<id>copy-solr-hyperbrain</id>
						<phase>compile</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							Configure the target directory in which the files are copied.
							<outputDirectory>${org.xmlrobot.memory}/${memory.hyperbrain.core.directory}/conf</outputDirectory>
							Configure the directory which contents are copied to the target 
								directory. Disable properties filtering.
							<resources>
								<resource>
									<directory>${project.basedir}/src/main/hyperbrain</directory>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-solr-hyperspace</id>
						<phase>compile</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							Configure the target directory in which the files are copied.
							<outputDirectory>${org.xmlrobot.memory}/${memory.hyperspace.core.directory}/conf</outputDirectory>
							Configure the directory which contents are copied to the target 
								directory. Disable properties filtering.
							<resources>
								<resource>
									<directory>${project.basedir}/src/main/hyperspace</directory>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin> -->
		</plugins>
	</build>
	<!-- <modules>
		<module>hyperclock.common</module>
		<module>hyperclock.core</module>
	</modules> -->
</project>